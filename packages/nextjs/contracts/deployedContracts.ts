/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import ENV from "../config/enviroment";
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  // sepolia

  11155111: {
    Wallet: {
      address: "0xc6b17Af051145A79824d9e7b155Fc4C1D96B2EE5",
      // address: "0x14578eBba609f3ed84E7cca158e323d407106def", //old
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
          ],
          name: "DestinationChainNotAllowlisted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "FailedToWithdrawEth",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "router",
              type: "address",
            },
          ],
          name: "InvalidRouter",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "currentBalance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "calculatedFees",
              type: "uint256",
            },
          ],
          name: "NotEnoughBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "NothingToWithdraw",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "sourceChainSelector",
              type: "uint64",
            },
          ],
          name: "SourceChainNotAllowlisted",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint64",
              name: "sourceChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "text",
              type: "string",
            },
          ],
          name: "MessageReceived",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "text",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "feeToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fees",
              type: "uint256",
            },
          ],
          name: "MessageSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint64",
              name: "sourceChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "text",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
          ],
          name: "MessageWithTokenReceived",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "text",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "feeToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fees",
              type: "uint256",
            },
          ],
          name: "MessageWithTokenSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "feeToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fees",
              type: "uint256",
            },
          ],
          name: "TokensTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "addOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "bool",
              name: "allowed",
              type: "bool",
            },
          ],
          name: "allowlistDestinationChain",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_sourceChainSelector",
              type: "uint64",
            },
            {
              internalType: "bool",
              name: "allowed",
              type: "bool",
            },
          ],
          name: "allowlistSourceChain",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          name: "allowlistedDestinationChains",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          name: "allowlistedSourceChains",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "messageId",
                  type: "bytes32",
                },
                {
                  internalType: "uint64",
                  name: "sourceChainSelector",
                  type: "uint64",
                },
                {
                  internalType: "bytes",
                  name: "sender",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "token",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "amount",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Client.EVMTokenAmount[]",
                  name: "destTokenAmounts",
                  type: "tuple[]",
                },
              ],
              internalType: "struct Client.Any2EVMMessage",
              name: "message",
              type: "tuple",
            },
          ],
          name: "ccipReceive",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getRouter",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ownersCount",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "removeOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "string",
              name: "_text",
              type: "string",
            },
          ],
          name: "sendMessagePayLINK",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "string",
              name: "_text",
              type: "string",
            },
          ],
          name: "sendMessagePayNative",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "string",
              name: "_text",
              type: "string",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "sendMessageWithTokenPayLINK",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "string",
              name: "_text",
              type: "string",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "sendMessageWithTokenPayNative",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferTokensPayLINK",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferTokensPayNative",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_beneficiary",
              type: "address",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_beneficiary",
              type: "address",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "withdrawToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        owner: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        transferOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        ccipReceive: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        getRouter: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        supportsInterface: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
      },
    },
    WalletFactory: {
      // address: "0x9e0A2Ec943b48E5539cb3730e0E3fc27c8FB49A5",
      address: ENV.SEPOLIA_WALLET_FACTORY_ADDRESS,
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "createWallet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "deployWallets",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getDeployedWallets",
          outputs: [
            {
              internalType: "address payable[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        owner: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        transferOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        ccipReceive: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        getRouter: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        supportsInterface: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
      },
    },
    TokenSender: {
      address: "0x2b54FaAD30691E6fE5757cCc786E849D5063D4A0",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
          ],
          name: "DestinationChainNotAllowlisted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "FailedToWithdrawEth",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "currentBalance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "calculatedFees",
              type: "uint256",
            },
          ],
          name: "NotEnoughBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "NothingToWithdraw",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "feeToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fees",
              type: "uint256",
            },
          ],
          name: "TokensTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "bool",
              name: "allowed",
              type: "bool",
            },
          ],
          name: "allowlistDestinationChain",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          name: "allowlistedChains",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferTokensPayLINK",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferTokensPayNative",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_beneficiary",
              type: "address",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_beneficiary",
              type: "address",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "withdrawToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        owner: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        transferOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
      },
    },
    Sender: {
      address: "0xE061c2678fb3505888fa8aE89d8e809bf3C256a5", // sepolia deployed
      // address: "0x5FbDB2315678afecb367f032d93F642f64180aa3", //local
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "currentBalance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "calculatedFees",
              type: "uint256",
            },
          ],
          name: "NotEnoughBalance",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "text",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "feeToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fees",
              type: "uint256",
            },
          ],
          name: "MessageSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "destinationChainSelector",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              internalType: "string",
              name: "text",
              type: "string",
            },
          ],
          name: "sendMessage",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        owner: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        transferOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
      },
    },
  },
  // avalanche fuji
  43113: {
    WalletFactory: {
      // address: "TODO .env",
      address: ENV.AVALANCHE_FUJI_FACTORY_ADDRESS,
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "createWallet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "deployWallets",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getDeployedWallets",
          outputs: [
            {
              internalType: "address payable[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        owner: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        transferOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        ccipReceive: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        getRouter: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        supportsInterface: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
      },
    },
  },
  // optimism goerli
  420: {
    WalletFactory: {
      // address: "TO DO UPDATE .env flie",
      address: ENV.OPTIMISM_GOERLI_WALLET_FACTORY_ADDRESS,
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "createWallet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "deployWallets",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getDeployedWallets",
          outputs: [
            {
              internalType: "address payable[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        owner: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        transferOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        ccipReceive: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        getRouter: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        supportsInterface: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
      },
    },
  },
  // mumbai
  80001: {
    WalletFactory: {
      // address: "0xB86b4A177003f38B97FecaFD6a087f90d350dC4c",
      address: ENV.MUMBAI_WALLET_FACTORY_ADDRESS,
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "createWallet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "deployWallets",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getDeployedWallets",
          outputs: [
            {
              internalType: "address payable[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        owner: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        transferOwnership: "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
        ccipReceive: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        getRouter: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        supportsInterface: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
      },
    },
    Receiver: {
      address: "0x7447e3AEc61b740f97fa685eD59CEF80A87Cd077",
      // address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "router",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "router",
              type: "address",
            },
          ],
          name: "InvalidRouter",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint64",
              name: "sourceChainSelector",
              type: "uint64",
            },
            {
              indexed: false,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "text",
              type: "string",
            },
          ],
          name: "MessageReceived",
          type: "event",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "messageId",
                  type: "bytes32",
                },
                {
                  internalType: "uint64",
                  name: "sourceChainSelector",
                  type: "uint64",
                },
                {
                  internalType: "bytes",
                  name: "sender",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "token",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "amount",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Client.EVMTokenAmount[]",
                  name: "destTokenAmounts",
                  type: "tuple[]",
                },
              ],
              internalType: "struct Client.Any2EVMMessage",
              name: "message",
              type: "tuple",
            },
          ],
          name: "ccipReceive",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getLastReceivedMessageDetails",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "text",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getRouter",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {
        ccipReceive: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        getRouter: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        supportsInterface: "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
